{#

// Example outputed With Maximum 3 arguments; recursion_limit=3

#define FOR_EACH(f, values) CAT(FOR_EACH, N(values))(f, values)
#define FOR_EACH3(f, x, ...) f(x) FOR_EACH2(f, __VA_ARGS__)
#define FOR_EACH2(f, x, ...) f(x) FOR_EACH1(f, __VA_ARGS__)
#define FOR_EACH1(f, x) f(x)

#}
#pragma once

#include "{{ header("cat") }}"
#include "{{ header("args_count") }}"

#define {{ macro("FOR_EACH") }}(f, values) \
    {{ macro("CAT") }}({{ macro("FOR_EACH") }}, {{ macro("N") }}(values))(f, values)

#define {{ macro("FOR_EACH1") }}(f, x) f(x)

{% for i in range(recursion_limit, 1, -1) %}
#define {{ macro("FOR_EACH") }}{{ i }}(f, x, ...) f(x) {{ macro("FOR_EACH") }}{{ i - 1 }}(f, __VA_ARGS__)
{% endfor %}